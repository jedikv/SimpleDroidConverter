apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.frogermcs.androiddevmetrics'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.ben-manes.versions'
apply from: '../code_quality_tools/quality.gradle'
apply from: '../code_quality_tools/jacoco.gradle'


def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))


// Manifest version information!
//def versionMajor = 0
//def versionMinor = 1
//def versionPatch = 0
//def versionBuild = 0 // bump for dogfood builds, public betas, etc.

//Build variables
def BOOLEAN = "boolean"
def STRING = "String"
def TRUE = "true"
def FALSE = "false"
def GIT_SHA = "GIT_SHA"
def BUILD_TIME = "BUILD_TIME"
def LOG_HTTP_REQUESTS = "LOG_HTTP_REQUESTS"
def CRASH_REPORTING = "CRASH_REPORTING"


android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.jedikv.simpleconverter"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        // for espresso tests
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'


        versionCode versions.appMajor * 100 + versions.appMinor * 10 + versions.appPatch + versions.appBuild
        versionName "${versions.appMajor}.${versions.appMinor}.${versions.appPatch}"

        // Enabling multidex support.
        //multiDexEnabled true

        buildConfigField STRING, GIT_SHA, "\"${gitSha}\""
        buildConfigField STRING, BUILD_TIME, "\"${buildTime}\""
        buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE
        buildConfigField BOOLEAN, CRASH_REPORTING, FALSE
    }
    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, FALSE

        }

        debug {
            versionNameSuffix '-dev'
            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            testCoverageEnabled = true
            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE

        }

        sourceSets {
            main {
                java.srcDirs = ['src/main/java', 'src/main/dao-generated']
            }


            /*
            unitTest {
                java.srcDir file('androidTest')
                resources.srcDir file('androidTest/resources')
            }
            */

        }


    }


    lintOptions {
        warningsAsErrors true
        abortOnError true
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.

    }

    dexcount {
        includeClasses = true
        includeFieldCount = true
        format = "json"
        orderByMethodCount = true
        verbose = false
    }

    testOptions {
        unitTests.all {
           // jvmArgs '-XX:MaxPermSize=256m' //Or any other
        }
        unitTests.returnDefaultValues = true

    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize "4g"
        //preDexLibraries = false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //Android support libraries
    compile libraries.supportAppCompat
    compile libraries.supportCardView
    compile libraries.supportRecyclerView
    compile libraries.supportDesign
    compile libraries.supportAnnotations
    compile libraries.nineOldAndroids

    //compile libraries.multidex

    //Butterknife
    compile libraries.butterKnife
    //Otto Event bus
    compile libraries.otto
    //Gson JSON parser
    compile libraries.gson
    //Dagger 2.0
    compile libraries.dagger
    apt libraries.daggerCompiler
    provided libraries.jsr250
    //Greendao ORM database
    compile libraries.greendao
    //ReQuery database
    //compile libraries.requery
    //compile libraries.requeryAndroid
    //compile libraries.requeryProcessor

    //Date4J date parser
    //compile libraries.date4j

    //Timber logging library
    compile libraries.timber
    //Icepick
    compile libraries.icePick
    compile libraries.icePickProcessor
    //Okhttp & Retrofit
    compile libraries.okHttp
    compile libraries.okHttpLoggingInterceptor
    compile libraries.retrofit
    compile libraries.okHttpUrlConnection
    compile libraries.retrofitRxJavaAdapter
    compile libraries.retrofitGsonConverter

    //AutoValue
    //provided libraries.autoValue
    //apt libraries.autoValue

    //RxAndroid
    compile libraries.rxJava
    compile libraries.rxAndroid

    //compile libraries.jodaAndroid
    //Open source acknowledgements
    compile(libraries.aboutLibraries) {
        transitive = true
    }
    //Leaky Canary for memory leak detection
    debugCompile libraries.leakCanary
    releaseCompile libraries.leakCanaryNoOp
    //Stetho is a debug bridge for Android applications via chrome
    compile libraries.stetho


    //Testing
    // Espresso Instrumentation Testing
    androidTestCompile libraries.espressoCore
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestCompile (libraries.espressoContrib) {
        // Causes IncompatibleClassChangeError. As alwaysâ€¦
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
    }
    // Espresso-web for WebView support
    androidTestCompile libraries.espressoWeb
    // Espresso-idling-resource for synchronization with background jobs
    androidTestCompile libraries.espressoIdle
    //androidTestCompile 'com.android.support.test:testing-support-lib:0.1'

    //Android JUnit Runner
    androidTestCompile libraries.supportTestRunner
    //Dependency to use Junit4 rules
    androidTestCompile libraries.supportTestRules
    // Junit
    testCompile libraries.junit
}

configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
    }
}